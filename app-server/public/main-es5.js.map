{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/api/omdb.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/movie/movie.component.ts","webpack:///src/app/movie/movie.component.html","webpack:///src/app/search/search.component.ts","webpack:///src/app/search/search.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","OmdbService","http","movieTitle","undefined","url","get","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","declarations","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","providers","bootstrap","schemas","HomeComponent","omdbService","router","console","log","navigate","onSearch","MovieComponent","Year","SearchComponent","movies","searchMovies","searchMovieSub","unsubscribe","subscribe","res","searchSuccess","err","searchError","Search","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class OmdbService {\n  movieTitle: string;\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  searchMovies(): Observable<any> {\n    if (this.movieTitle === undefined || this.movieTitle === null) { this.movieTitle = ''; }\n    const url = 'http://localhost:3001/omdb/search?title=' + this.movieTitle;\n    return this.http.get(url);\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { SearchComponent } from './search/search.component';\nimport { MovieComponent } from './movie/movie.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/index', pathMatch: 'full' },\n  { path: 'index', component: HomeComponent },\n  { path: 'search', component: SearchComponent },\n  { path: 'movie/:imdbId', component: MovieComponent }\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app-ui';\n}\n","<!-- Will get replaced with route component -->\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { OmdbService } from './api/omdb.service';\nimport { SearchComponent } from './search/search.component';\nimport { MovieComponent } from './movie/movie.component';\nimport { HomeComponent } from './home/home.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SearchComponent,\n    MovieComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule\n  ],\n  providers: [\n    OmdbService\n  ],\n  bootstrap: [AppComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA\n  ]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { OmdbService } from '../api/omdb.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  movieTitle: string;\n\n  constructor(\n    private omdbService: OmdbService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    console.log('Reached Search Page')\n    console.log(this.omdbService.movieTitle)\n  }\n\n  onSearch() {\n    this.omdbService.movieTitle = this.movieTitle;\n    this.router.navigate(['/search']);\n  }\n\n\n}\n","<div class=\"background\">\n  <!-- Angular specific attributes need to be imported -->\n  <input [(ngModel)]=\"movieTitle\" class=\"search\" />\n  <button class=\"btn btn-success search-btn\"\n    (click)=\"onSearch()\">Search</button>\n</div>\n<div>{{movieTitle}}</div>>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-movie',\n  templateUrl: './movie.component.html',\n  styleUrls: ['./movie.component.scss']\n})\nexport class MovieComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>movie works!</p>\nUse imdb id to display data of the movie","import { Component, OnInit, OnChanges, OnDestroy } from '@angular/core';\nimport { OmdbService } from '../api/omdb.service';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent implements OnInit, OnDestroy {\n\n  movies = [];\n  movieTitle: string; \n  searchMovieSub: Subscription;\n\n\n  constructor(\n    private router: Router,\n    private omdbService: OmdbService\n  ) { }\n\n  ngOnInit(): void {\n    // Angular Lifecycle Stages Hooks\n    // OnInit, OnChanges ( Input Changes ), OnDestoy\n    this.movieTitle = this.omdbService.movieTitle;\n    this.searchMovies()\n  }\n\n  ngOnDestroy() {\n    this.searchMovieSub.unsubscribe();\n  }\n\n  searchMovies() {\n    this.searchMovieSub = this.omdbService.searchMovies().subscribe(\n      res => this.searchSuccess(res),\n      err => this.searchError(err)\n    )\n  }\n\n  searchSuccess(res) {\n    this.movies = res.Search;\n    console.log(this.movies)\n  }\n\n  searchError(err) {\n    console.log(err)\n  }\n\n  onSearch() {\n    this.omdbService.movieTitle = this.movieTitle;\n    this.searchMovies()\n  }\n\n}\n","<div class=\"background\">\n  <input class=\"search\" [(ngModel)]=\"movieTitle\"/>\n  <button class=\"btn btn-success search-btn\" (click)=\"onSearch()\">Search</button>\n</div>\n\n<br/>\n\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-4\" *ngFor=\"let movie of movies\">\n      <div class=\"card\" style=\"width: 18rem;\">\n        <div class=\"bd-placeholder-img card-img-top\" style=\"width: 18rem; height: 18rem; overflow: hidden;\">\n          <img  style=\"width: 18rem;\" [src]=\"movie.Poster\">\n        </div>\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">{{ movie.Title }}</h5>\n          <p class=\"card-text\"> Year : {{ movie.Year }} , Type: {{ movie.Type }} </p>\n          <a href=\"#\" class=\"btn btn-primary\">View</a>\n        </div>\n      </div>\n      <br/>\n    </div> \n  </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}